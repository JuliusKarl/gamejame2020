{"ast":null,"code":"import { cardType } from '../../config/cardType';\nlet displayCallback;\n\nfunction setCardPlayedDisplayCallback(f) {\n  // f should be a function that expects one parameter, which is the card played, e.g.:\n  // {targetType: targetType.NONE, imageUrl: '../cards/SET_ALL_TO_LOWEST.jpg'}\n  this.callback = f;\n}\n\nfunction cardPlayedCallback(e) {\n  this.callback(e);\n}\n\nconst state = {\n  abc123: {\n    tower: {\n      health: 15\n    },\n    hand: [cardType.TRADE_TOWER, cardType.SET_ALL_TO_LOWEST, cardType.UNDO_LAST, cardType.UNDO_LAST, cardType.FOUR]\n  },\n  def654: {\n    tower: {\n      health: 29\n    },\n    hand: [cardType.RESET_TO_15, cardType.FIVE, cardType.ONE_PLUS_ROUND_COUNT, cardType.ONE, cardType.UNDO_LAST]\n  }\n};\nexport { state, setCardPlayedDisplayCallback };","map":{"version":3,"sources":["C:/Users/Julius Karl/Documents/GGJ/game/src/gameState/gameState.js"],"names":["cardType","displayCallback","setCardPlayedDisplayCallback","f","callback","cardPlayedCallback","e","state","abc123","tower","health","hand","TRADE_TOWER","SET_ALL_TO_LOWEST","UNDO_LAST","FOUR","def654","RESET_TO_15","FIVE","ONE_PLUS_ROUND_COUNT","ONE"],"mappings":"AAAA,SAASA,QAAT,QAAyB,uBAAzB;AAEA,IAAIC,eAAJ;;AAEA,SAASC,4BAAT,CAAsCC,CAAtC,EAAyC;AACvC;AACA;AACA,OAAKC,QAAL,GAAgBD,CAAhB;AACD;;AAED,SAASE,kBAAT,CAA4BC,CAA5B,EAA+B;AAC7B,OAAKF,QAAL,CAAcE,CAAd;AACD;;AAED,MAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AADH,KADD;AAINC,IAAAA,IAAI,EAAE,CAACX,QAAQ,CAACY,WAAV,EACJZ,QAAQ,CAACa,iBADL,EAEJb,QAAQ,CAACc,SAFL,EAGJd,QAAQ,CAACc,SAHL,EAIJd,QAAQ,CAACe,IAJL;AAJA,GADI;AAYZC,EAAAA,MAAM,EAAE;AACNP,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AADH,KADD;AAINC,IAAAA,IAAI,EAAE,CAACX,QAAQ,CAACiB,WAAV,EACJjB,QAAQ,CAACkB,IADL,EAEJlB,QAAQ,CAACmB,oBAFL,EAGJnB,QAAQ,CAACoB,GAHL,EAIJpB,QAAQ,CAACc,SAJL;AAJA;AAZI,CAAd;AAyBA,SACEP,KADF,EACSL,4BADT","sourcesContent":["import { cardType } from '../../config/cardType';\r\n\r\nlet displayCallback;\r\n\r\nfunction setCardPlayedDisplayCallback(f) {\r\n  // f should be a function that expects one parameter, which is the card played, e.g.:\r\n  // {targetType: targetType.NONE, imageUrl: '../cards/SET_ALL_TO_LOWEST.jpg'}\r\n  this.callback = f;\r\n}\r\n\r\nfunction cardPlayedCallback(e) {\r\n  this.callback(e);\r\n}\r\n\r\nconst state = {\r\n  abc123: {\r\n    tower: {\r\n      health: 15,\r\n    },\r\n    hand: [cardType.TRADE_TOWER,\r\n      cardType.SET_ALL_TO_LOWEST,\r\n      cardType.UNDO_LAST,\r\n      cardType.UNDO_LAST,\r\n      cardType.FOUR],\r\n  },\r\n\r\n  def654: {\r\n    tower: {\r\n      health: 29,\r\n    },\r\n    hand: [cardType.RESET_TO_15,\r\n      cardType.FIVE,\r\n      cardType.ONE_PLUS_ROUND_COUNT,\r\n      cardType.ONE,\r\n      cardType.UNDO_LAST],\r\n  },\r\n\r\n};\r\n\r\nexport {\r\n  state, setCardPlayedDisplayCallback\r\n};\r\n"]},"metadata":{},"sourceType":"module"}